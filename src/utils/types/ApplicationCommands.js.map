{"version":3,"file":"ApplicationCommands.js","sourceRoot":"","sources":["ApplicationCommands.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n  ApplicationCommandOptionChoiceData,\n  ApplicationCommandOptionType,\n  ApplicationCommandType,\n  ChannelType,\n  Locale,\n} from \"discord.js\";\n\ntype BaseApplicationCommandOption = {\n  channel_types?: readonly ChannelType[];\n  choices?: readonly ApplicationCommandOptionChoiceData[];\n  description: string;\n  description_localizations?: Record<Locale, string>;\n  max_length?: number;\n  max_value?: number;\n  min_length?: number;\n  min_value?: number;\n  name: string;\n  name_localizations?: Record<Locale, string>;\n  options?: readonly ApplicationCommandOption[];\n  required?: boolean;\n};\n\ntype ApplicationCommandOption =\n  | (BaseApplicationCommandOption & {\n      autocomplete?: false;\n      type: ApplicationCommandOptionType;\n    })\n  | (BaseApplicationCommandOption & {\n      autocomplete?: true;\n      type:\n        | ApplicationCommandOptionType.Integer\n        | ApplicationCommandOptionType.Number\n        | ApplicationCommandOptionType.String;\n    });\n\nexport type ContextMenuCommand = {\n  default_member_permissions: string | undefined;\n  description_localizations?: Record<Locale, string>;\n  dm_permission: boolean;\n  name: string;\n  name_localizations?: Record<Locale, string>;\n  nsfw?: boolean;\n  type?: ApplicationCommandType;\n};\n\n/**\n * Type for a chat input command.\n *\n * For consistency, default_member_permissions and dm_permission is required\n *\n * @experimental\n * @example\n * ```ts\n * const ExampleCommand: ChatInputCommand = {\n *  name: \"example\",\n * description: \"This is an example command\",\n * options: [\n *     {\n *       name: \"example\",\n *       description: \"This is an example option\",\n *       type: 3,\n *       required: true,\n *     },\n *   ],\n * default_member_permissions: \"0\",\n * dm_permission: true,\n * } as const;\n * ```\n */\nexport type ChatInputCommand = ContextMenuCommand & {\n  description: string;\n  options?: readonly ApplicationCommandOption[];\n};\n"]}