{"version":3,"file":"returnError.js","sourceRoot":"","sources":["returnError.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,YAAY,EACZ,mBAAmB,GAGpB,MAAM,YAAY,CAAC;AAGpB;;;;;;;;;GASG;AACH,MAAM,CAAC,KAAK,UAAU,yBAAyB,CAAC,WAAyC,EAAE,UAAkB;IAC3G,MAAM,KAAK,GAAG,IAAI,YAAY,EAAE;SAC7B,QAAQ,CAAC,4BAA4B,WAAW,CAAC,WAAW,IAAI,CAAC;SACjE,cAAc,CAAC,2BAA2B,IAAI,mBAAmB,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,gBAAgB,CAAC;SACxG,QAAQ,oCAAqB,CAAC;IACjC,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACjE,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,CAAC,KAAK,UAAU,wBAAwB,CAAC,WAAyC,EAAE,UAAkB;IAC1G,MAAM,KAAK,GAAG,IAAI,YAAY,EAAE;SAC7B,QAAQ,CAAC,4BAA4B,WAAW,CAAC,WAAW,IAAI,CAAC;SACjE,cAAc,CAAC,yBAAyB,IAAI,mBAAmB,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,gBAAgB,CAAC;SACtG,QAAQ,oCAAqB,CAAC;IACjC,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACjE,CAAC;AAED;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,WAAkD;IAC9F,MAAM,KAAK,GAAG,IAAI,YAAY,EAAE;SAC7B,QAAQ,CAAC,0BAA0B,WAAW,CAAC,WAAW,IAAI,CAAC;SAC/D,cAAc,CAAC,oFAAoF,CAAC;SACpG,QAAQ,oCAAqB,CAAC;IACjC,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACjE,CAAC;AAED;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAAC,WAAkD;IAC7F,MAAM,KAAK,GAAG,IAAI,YAAY,EAAE;SAC7B,QAAQ,CAAC,0BAA0B,WAAW,CAAC,WAAW,IAAI,CAAC;SAC/D,cAAc,CAAC,iFAAiF,CAAC;SACjG,QAAQ,oCAAqB,CAAC;IACjC,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACjE,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAC3C,WAAwC,EACxC,QAAgB,EAChB,WAAmB;IAEnB,MAAM,KAAK,GAAG,IAAI,YAAY,EAAE;SAC7B,QAAQ,CAAC,GAAG,QAAQ,WAAW,WAAW,CAAC,WAAW,IAAI,CAAC;SAC3D,cAAc,CAAC,KAAK,WAAW,EAAE,CAAC;SAClC,QAAQ,oCAAqB,CAAC;IACjC,OAAO,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACjE,CAAC","sourcesContent":["import {\n  EmbedBuilder,\n  PermissionsBitField,\n  type CommandInteraction,\n  type ChatInputCommandInteraction,\n} from \"discord.js\";\nimport { Color } from \"../../constants.js\";\n\n/**\n * @param interaction - The command interaction to reply to\n * @param permission - The permission that the user is missing\n * @returns An interaction reply, with an error embed\n * @example\n * ```\n * if (!interaction.member?.permissions.has(PermissionFlagsBits.Administrator))\n *   return raiseUserPermissionsError(interaction, PermissionFlagsBits.Administrator);\n * ```\n */\nexport async function raiseUserPermissionsError(interaction: CommandInteraction<\"cached\">, permission: bigint) {\n  const embed = new EmbedBuilder()\n    .setTitle(`Permissions Error  •  \\`/${interaction.commandName}\\``)\n    .setDescription(`❌ You do not have the \\`${new PermissionsBitField(permission).toArray()}\\` permission!`)\n    .setColor(Color.DiscordDanger);\n  return interaction.reply({ embeds: [embed], ephemeral: true });\n}\n\n/**\n * @param interaction - The command interaction to reply to\n * @param permission - The permission that the bot is missing\n * @returns An interaction reply, with an error embed\n * @example\n * ```\n * if (!interaction.guild?.me?.permissions.has(PermissionFlagsBits.Administrator))\n *  return raiseBotPermissionsError(interaction, PermissionFlagsBits.Administrator);\n * ```\n */\nexport async function raiseBotPermissionsError(interaction: CommandInteraction<\"cached\">, permission: bigint) {\n  const embed = new EmbedBuilder()\n    .setTitle(`Permissions Error  •  \\`/${interaction.commandName}\\``)\n    .setDescription(`❌ I do not have the \\`${new PermissionsBitField(permission).toArray()}\\` permission!`)\n    .setColor(Color.DiscordDanger);\n  return interaction.reply({ embeds: [embed], ephemeral: true });\n}\n\n/**\n * @param interaction - The chat input command interaction to reply to\n * @returns An interaction reply, with an error embed\n */\nexport async function raiseUserHierarchyError(interaction: ChatInputCommandInteraction<\"cached\">) {\n  const embed = new EmbedBuilder()\n    .setTitle(`Hierarchy Error  •  \\`/${interaction.commandName}\\``)\n    .setDescription(\"❌ You cannot perform this action on a member with a higher or equal role than you!\")\n    .setColor(Color.DiscordDanger);\n  return interaction.reply({ embeds: [embed], ephemeral: true });\n}\n\n/**\n * @param interaction - The chat input command interaction to reply to\n * @returns An interaction reply, with an error embed\n */\nexport async function raiseBotHierarchyError(interaction: ChatInputCommandInteraction<\"cached\">) {\n  const embed = new EmbedBuilder()\n    .setTitle(`Hierarchy Error  •  \\`/${interaction.commandName}\\``)\n    .setDescription(\"❌ I cannot perform this action on a member with a higher or equal role than me!\")\n    .setColor(Color.DiscordDanger);\n  return interaction.reply({ embeds: [embed], ephemeral: true });\n}\n\n/**\n * @param interaction - The chat input command interaction to reply to\n * @param errTitle - The title of the error\n * @param description - The description of the error\n * @returns An interaction reply, with an error embed\n * @example\n * ```\n * await raiseMiscellaneousError(interaction, \"Error\", \"Something went wrong while trying to fetch the data!\");\n * ```\n */\nexport async function raiseMiscellaneousError(\n  interaction: ChatInputCommandInteraction,\n  errTitle: string,\n  description: string\n) {\n  const embed = new EmbedBuilder()\n    .setTitle(`${errTitle}  •  \\`/${interaction.commandName}\\``)\n    .setDescription(`❌ ${description}`)\n    .setColor(Color.DiscordDanger);\n  return interaction.reply({ embeds: [embed], ephemeral: true });\n}\n"]}