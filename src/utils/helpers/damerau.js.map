{"version":3,"file":"damerau.js","sourceRoot":"","sources":["damerau.ts"],"names":[],"mappings":"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","sourcesContent":["type IDamerauResponse = {\n  relative: number;\n  similarity: number;\n  steps: number;\n};\n\ntype IAutocompleteResponse = {\n  name: string;\n  value: string;\n};\n\n/* eslint-disable id-length, @typescript-eslint/no-confusing-non-null-assertion */\n\n/**\n * @param a - The first string to compare\n * @param b - The second string to compare\n * @returns The Damerau-Levenshtein distance between the two strings\n */\nfunction damerau(a: string, b: string): IDamerauResponse {\n  if (a.length === 0) return { steps: b.length, relative: 1, similarity: 0 };\n  if (b.length === 0) return { steps: a.length, relative: 1, similarity: 0 };\n\n  const matrix: number[][] = [];\n\n  let i: number;\n  for (i = 0; i <= b.length; i++) {\n    matrix[i] = [i];\n  }\n\n  let j: number;\n  for (j = 0; j <= a.length; j++) {\n    matrix[0]![j] = j;\n  }\n\n  for (i = 1; i <= b.length; i++) {\n    for (j = 1; j <= a.length; j++) {\n      if (b.charAt(i - 1) === a.charAt(j - 1)) {\n        matrix[i]![j]! = matrix[i - 1]![j - 1]!;\n      } else {\n        matrix[i]![j] = Math.min(matrix[i - 1]![j - 1]! + 1, Math.min(matrix[i]![j - 1]! + 1, matrix[i - 1]![j]! + 1));\n      }\n    }\n\n    if (i > 1 && j > 1 && b.charAt(i - 1) === a.charAt(j - 2) && b.charAt(i - 2) === a.charAt(j - 1)) {\n      matrix[i]![j] = Math.min(matrix[i]![j]!, matrix[i - 2]![j - 2]! + 1);\n    }\n  }\n\n  const steps = matrix[b.length]![a.length] ?? 0;\n  const relative = steps / Math.max(a.length, b.length) ?? 0;\n  const similarity = 1 - relative ?? 0;\n\n  return { steps, relative, similarity };\n}\n\nfunction quickSort(arr: string[], left: number, right: number, query: string) {\n  if (left >= right) return;\n\n  const pivot = arr[Math.floor((left + right) / 2)];\n  let i = left;\n  let j = right;\n\n  while (i <= j) {\n    while (damerau(arr[i]!, query).relative < damerau(pivot!, query).relative) {\n      i++;\n    }\n\n    while (damerau(arr[j]!, query).relative > damerau(pivot!, query).relative) {\n      j--;\n    }\n\n    if (i <= j) {\n      const temp = arr[i];\n      arr[i] = arr[j]!;\n      arr[j] = temp!;\n      i++;\n      j--;\n    }\n  }\n\n  quickSort(arr, left, j, query);\n  quickSort(arr, i, right, query);\n}\n\n/* eslint-enable id-length */\n\n/**\n * @param query - The query to autocomplete\n * @param choices - The choices to autocomplete from\n * @returns The autocompleted choices in an array of objects\n */\nexport function damerAutocomplete(query: string, choices: readonly string[]): IAutocompleteResponse[] {\n  if (!choices) return [];\n\n  const levChoices = [];\n\n  for (const choice of choices) {\n    const index = choice.indexOf(\":\");\n    if (index >= 0) {\n      const levChoice = choice\n        .slice(Math.max(0, index + 2))\n        .trim()\n        .toLowerCase();\n      levChoices.push(levChoice);\n    }\n  }\n\n  const filtered = levChoices.filter((choice) => {\n    const lev: IDamerauResponse = damerau(choice, query);\n    if (query.length > 2) return lev.relative <= 0.75;\n    else if (query.length > 1) return lev.relative <= 0.8;\n    else return lev.relative <= 1;\n  });\n\n  const sorted = [...filtered];\n  quickSort(sorted, 0, sorted.length - 1, query);\n\n  const finalChoices = [];\n  for (const choice of sorted) {\n    const index = levChoices.indexOf(choice);\n    if (index !== -1) {\n      const selectedChoice = choices[index];\n      if (selectedChoice && selectedChoice.length > 0) {\n        finalChoices.push(selectedChoice);\n      }\n    }\n  }\n\n  let response = [];\n\n  for (const choice of finalChoices) {\n    response.push({ name: choice, value: choice });\n  }\n\n  if (response.length >= 15) {\n    response = response.slice(0, 15);\n  }\n\n  return response;\n}\n"]}